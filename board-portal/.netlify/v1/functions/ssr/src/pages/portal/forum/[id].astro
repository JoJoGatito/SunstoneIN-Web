---
import PortalLayout from '../../../layouts/PortalLayout.astro';
import { supabase } from '../../../lib/supabase';

const { id } = Astro.params;

if (!id) {
  return Astro.redirect('/portal/forum');
}

// Get topic
const { data: topic } = await supabase
  .from('forum_topics')
  .select('*')
  .eq('id', id)
  .single();

if (!topic) {
  return Astro.redirect('/portal/forum');
}

// Get replies
const { data: replies } = await supabase
  .from('forum_replies')
  .select('*')
  .eq('topic_id', id)
  .order('created_at');

// Get user emails
const userIds = [
  topic.created_by,
  ...(replies?.map(reply => reply.created_by) || [])
];
const uniqueUserIds = [...new Set(userIds)];

const { data: userEmails } = await supabase
  .from('auth.users')
  .select('id, email')
  .in('id', uniqueUserIds);

// Create a map of user IDs to emails
const userEmailMap = {};
userEmails?.forEach(user => {
  userEmailMap[user.id] = user.email;
});

// Handle form submission (new reply)
if (Astro.request.method === 'POST') {
  const formData = await Astro.request.formData();
  const content = formData.get('content')?.toString();

  if (content) {
    const { error } = await supabase
      .from('forum_replies')
      .insert({
        content,
        topic_id: id,
        created_by: Astro.locals.user.id
      });

    if (error) {
      console.error(error);
    } else {
      // Send email notification to all users
      const { data: users } = await supabase
        .from('auth.users')
        .select('email');
      
      const recipient_emails = users?.map(user => user.email) || [];
      
      // Call the edge function for email notification
      await fetch(`${import.meta.env.PUBLIC_SUPABASE_URL}/functions/v1/forum-notification`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${import.meta.env.PUBLIC_SUPABASE_ANON_KEY}`
        },
        body: JSON.stringify({
          topic,
          recipient_emails,
          type: 'new_reply'
        })
      });
      
      return Astro.redirect(`/portal/forum/${id}`);
    }
  }
}

// Format dates
const formatDate = (dateString) => {
  const date = new Date(dateString);
  return date.toLocaleDateString() + ' ' + date.toLocaleTimeString();
};
---

<PortalLayout title={topic.title}>
  <div class="mb-6">
    <a href="/portal/forum" class="text-indigo-600 hover:underline">‚Üê Back to Forum</a>
    <h1 class="text-2xl font-bold mt-2">{topic.title}</h1>
  </div>
  
  <!-- Topic content -->
  <div class="bg-white shadow rounded-lg p-6 mb-6">
    <div class="flex justify-between text-sm text-gray-500 mb-4">
      <span>Posted by: {userEmailMap[topic.created_by] || 'Unknown'}</span>
      <span>{formatDate(topic.created_at)}</span>
    </div>
    <div class="prose max-w-none">
      <p>{topic.content}</p>
    </div>
  </div>
  
  <!-- Replies -->
  <h2 class="text-xl font-semibold mb-4">Replies</h2>
  
  {replies?.length ? (
    <div class="space-y-4 mb-6">
      {replies.map((reply) => (
        <div class="bg-white shadow rounded-lg p-6">
          <div class="flex justify-between text-sm text-gray-500 mb-4">
            <span>Reply by: {userEmailMap[reply.created_by] || 'Unknown'}</span>
            <span>{formatDate(reply.created_at)}</span>
          </div>
          <div class="prose max-w-none">
            <p>{reply.content}</p>
          </div>
        </div>
      ))}
    </div>
  ) : (
    <div class="bg-white shadow rounded-lg p-6 mb-6 text-center text-gray-500">
      No replies yet. Be the first to respond!
    </div>
  )}
  
  <!-- Reply form -->
  <div class="bg-white shadow rounded-lg p-6">
    <h3 class="text-lg font-medium mb-4">Add Reply</h3>
    <form method="POST" class="space-y-4">
      <div>
        <textarea
          id="content"
          name="content"
          rows="4"
          required
          class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
          placeholder="Your reply..."
        ></textarea>
      </div>
      
      <div class="flex justify-end">
        <button
          type="submit"
          class="bg-indigo-600 text-white py-2 px-4 rounded-md shadow-sm text-sm font-medium hover:bg-indigo-700"
        >
          Post Reply
        </button>
      </div>
    </form>
  </div>
</PortalLayout>